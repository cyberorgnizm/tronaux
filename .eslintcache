[{"/home/ehealth4everyone/Desktop/Web/DAPP/tronaux/src/reportWebVitals.js":"1","/home/ehealth4everyone/Desktop/Web/DAPP/tronaux/src/components/Hero.jsx":"2","/home/ehealth4everyone/Desktop/Web/DAPP/tronaux/src/App.js":"3","/home/ehealth4everyone/Desktop/Web/DAPP/tronaux/src/components/Description.jsx":"4","/home/ehealth4everyone/Desktop/Web/DAPP/tronaux/src/components/Navbar.jsx":"5","/home/ehealth4everyone/Desktop/Web/DAPP/tronaux/src/components/Guide.jsx":"6","/home/ehealth4everyone/Desktop/Web/DAPP/tronaux/src/index.js":"7","/home/ehealth4everyone/Desktop/Web/DAPP/tronaux/src/components/Modal.jsx":"8","/home/ehealth4everyone/Desktop/Web/DAPP/tronaux/src/components/Contract.jsx":"9","/home/ehealth4everyone/Desktop/Web/DAPP/tronaux/src/components/Contact.jsx":"10","/home/ehealth4everyone/Desktop/Web/DAPP/tronaux/src/constants.js":"11"},{"size":362,"mtime":1606985847992,"results":"12","hashOfConfig":"13"},{"size":4474,"mtime":1608938783765,"results":"14","hashOfConfig":"13"},{"size":8979,"mtime":1608939872595,"results":"15","hashOfConfig":"13"},{"size":2689,"mtime":1608939295366,"results":"16","hashOfConfig":"13"},{"size":708,"mtime":1608775211308,"results":"17","hashOfConfig":"13"},{"size":3614,"mtime":1608939994265,"results":"18","hashOfConfig":"13"},{"size":547,"mtime":1607257137892,"results":"19","hashOfConfig":"13"},{"size":914,"mtime":1608776565970,"results":"20","hashOfConfig":"13"},{"size":894,"mtime":1608939399198,"results":"21","hashOfConfig":"13"},{"size":362,"mtime":1608777624158,"results":"22","hashOfConfig":"13"},{"size":77,"mtime":1608937561548,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"g651te",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/ehealth4everyone/Desktop/Web/DAPP/tronaux/src/reportWebVitals.js",[],["49","50"],"/home/ehealth4everyone/Desktop/Web/DAPP/tronaux/src/components/Hero.jsx",[],"/home/ehealth4everyone/Desktop/Web/DAPP/tronaux/src/App.js",["51"],"import { useState, useEffect } from \"react\";\nimport AppNavbar from \"./components/Navbar\";\nimport Hero from \"./components/Hero\";\nimport Description from \"./components/Description\";\nimport Guide from \"./components/Guide\";\nimport AppModal from \"./components/Modal\";\nimport Contact from \"./components/Contact\";\nimport Contract from \"./components/Contract\";\nimport TronWebContext from './contexts';\n\n// =========================\n// States variables\n// =========================\nconst contractAddress = \"TK24Fi6dTYnNxeihPcp36pPX5TmX2DY1Jx\";\nconst abi = [\n  {\n    inputs: [\n      { name: \"marketingAddr\", type: \"address\" },\n      { name: \"projectAddr\", type: \"address\" },\n    ],\n    stateMutability: \"Nonpayable\",\n    type: \"Constructor\",\n  },\n  {\n    inputs: [\n      { indexed: true, name: \"user\", type: \"address\" },\n      { name: \"totalAmount\", type: \"uint256\" },\n    ],\n    name: \"FeePayed\",\n    type: \"Event\",\n  },\n  {\n    inputs: [\n      { indexed: true, name: \"user\", type: \"address\" },\n      { name: \"amount\", type: \"uint256\" },\n    ],\n    name: \"NewDeposit\",\n    type: \"Event\",\n  },\n  {\n    inputs: [{ name: \"user\", type: \"address\" }],\n    name: \"Newbie\",\n    type: \"Event\",\n  },\n  {\n    inputs: [\n      { indexed: true, name: \"referrer\", type: \"address\" },\n      { indexed: true, name: \"referral\", type: \"address\" },\n      { indexed: true, name: \"level\", type: \"uint256\" },\n      { name: \"amount\", type: \"uint256\" },\n    ],\n    name: \"RefBonus\",\n    type: \"Event\",\n  },\n  {\n    inputs: [\n      { indexed: true, name: \"user\", type: \"address\" },\n      { name: \"amount\", type: \"uint256\" },\n    ],\n    name: \"Withdrawn\",\n    type: \"Event\",\n  },\n  {\n    outputs: [{ type: \"uint256\" }],\n    constant: true,\n    name: \"BASE_PERCENT\",\n    stateMutability: \"View\",\n    type: \"Function\",\n  },\n  {\n    outputs: [{ type: \"uint256\" }],\n    constant: true,\n    name: \"CONTRACT_BALANCE_STEP\",\n    stateMutability: \"View\",\n    type: \"Function\",\n  },\n  {\n    outputs: [{ type: \"uint256\" }],\n    constant: true,\n    name: \"INVEST_MIN_AMOUNT\",\n    stateMutability: \"View\",\n    type: \"Function\",\n  },\n  {\n    outputs: [{ type: \"uint256\" }],\n    constant: true,\n    name: \"MARKETING_FEE\",\n    stateMutability: \"View\",\n    type: \"Function\",\n  },\n  {\n    outputs: [{ type: \"uint256\" }],\n    constant: true,\n    name: \"PERCENTS_DIVIDER\",\n    stateMutability: \"View\",\n    type: \"Function\",\n  },\n  {\n    outputs: [{ type: \"uint256\" }],\n    constant: true,\n    name: \"PROJECT_FEE\",\n    stateMutability: \"View\",\n    type: \"Function\",\n  },\n  {\n    outputs: [{ type: \"uint256\" }],\n    constant: true,\n    inputs: [{ type: \"uint256\" }],\n    name: \"REFERRAL_PERCENTS\",\n    stateMutability: \"View\",\n    type: \"Function\",\n  },\n  {\n    outputs: [{ type: \"uint256\" }],\n    constant: true,\n    name: \"TIME_STEP\",\n    stateMutability: \"View\",\n    type: \"Function\",\n  },\n  {\n    name: \"destroyContract\",\n    stateMutability: \"Nonpayable\",\n    type: \"Function\",\n  },\n  {\n    outputs: [{ type: \"uint256\" }],\n    constant: true,\n    name: \"getContractBalance\",\n    stateMutability: \"View\",\n    type: \"Function\",\n  },\n  {\n    outputs: [{ type: \"uint256\" }],\n    constant: true,\n    name: \"getContractBalanceRate\",\n    stateMutability: \"View\",\n    type: \"Function\",\n  },\n  {\n    outputs: [{ type: \"uint256\" }],\n    constant: true,\n    inputs: [{ name: \"userAddress\", type: \"address\" }],\n    name: \"getHoldBonus\",\n    stateMutability: \"View\",\n    type: \"Function\",\n  },\n  {\n    outputs: [{ type: \"uint256\" }],\n    constant: true,\n    inputs: [{ name: \"userAddress\", type: \"address\" }],\n    name: \"getUserAmountOfDeposits\",\n    stateMutability: \"View\",\n    type: \"Function\",\n  },\n  {\n    outputs: [{ type: \"uint256\" }],\n    constant: true,\n    inputs: [{ name: \"userAddress\", type: \"address\" }],\n    name: \"getUserAvailableBalanceForWithdrawal\",\n    stateMutability: \"View\",\n    type: \"Function\",\n  },\n  {\n    outputs: [{ type: \"uint256\" }],\n    constant: true,\n    inputs: [{ name: \"userAddress\", type: \"address\" }],\n    name: \"getUserCheckpoint\",\n    stateMutability: \"View\",\n    type: \"Function\",\n  },\n  {\n    outputs: [{ type: \"uint256\" }, { type: \"uint256\" }, { type: \"uint256\" }],\n    constant: true,\n    inputs: [\n      { name: \"userAddress\", type: \"address\" },\n      { name: \"index\", type: \"uint256\" },\n    ],\n    name: \"getUserDepositInfo\",\n    stateMutability: \"View\",\n    type: \"Function\",\n  },\n  {\n    outputs: [{ type: \"uint256\" }],\n    constant: true,\n    inputs: [{ name: \"userAddress\", type: \"address\" }],\n    name: \"getUserDividends\",\n    stateMutability: \"View\",\n    type: \"Function\",\n  },\n  {\n    outputs: [{ type: \"uint256\" }, { type: \"uint256\" }, { type: \"uint256\" }],\n    constant: true,\n    inputs: [{ name: \"userAddress\", type: \"address\" }],\n    name: \"getUserDownlineCount\",\n    stateMutability: \"View\",\n    type: \"Function\",\n  },\n  {\n    outputs: [{ type: \"uint256\" }],\n    constant: true,\n    inputs: [{ name: \"userAddress\", type: \"address\" }],\n    name: \"getUserPercentRate\",\n    stateMutability: \"View\",\n    type: \"Function\",\n  },\n  {\n    outputs: [{ type: \"uint256\" }],\n    constant: true,\n    inputs: [{ name: \"userAddress\", type: \"address\" }],\n    name: \"getUserReferralBonus\",\n    stateMutability: \"View\",\n    type: \"Function\",\n  },\n  {\n    outputs: [{ type: \"uint256\" }],\n    constant: true,\n    inputs: [{ name: \"userAddress\", type: \"address\" }],\n    name: \"getUserReferralWithdraw\",\n    stateMutability: \"View\",\n    type: \"Function\",\n  },\n  {\n    outputs: [{ type: \"address\" }],\n    constant: true,\n    inputs: [{ name: \"userAddress\", type: \"address\" }],\n    name: \"getUserReferrer\",\n    stateMutability: \"View\",\n    type: \"Function\",\n  },\n  {\n    outputs: [{ type: \"uint256\" }],\n    constant: true,\n    inputs: [{ name: \"userAddress\", type: \"address\" }],\n    name: \"getUserTotalDeposits\",\n    stateMutability: \"View\",\n    type: \"Function\",\n  },\n  {\n    outputs: [{ type: \"uint256\" }],\n    constant: true,\n    inputs: [{ name: \"userAddress\", type: \"address\" }],\n    name: \"getUserTotalWithdrawn\",\n    stateMutability: \"View\",\n    type: \"Function\",\n  },\n  {\n    payable: true,\n    inputs: [{ name: \"referrer\", type: \"address\" }],\n    name: \"invest\",\n    stateMutability: \"Payable\",\n    type: \"Function\",\n  },\n  {\n    outputs: [{ type: \"bool\" }],\n    constant: true,\n    inputs: [{ name: \"userAddress\", type: \"address\" }],\n    name: \"isActive\",\n    stateMutability: \"View\",\n    type: \"Function\",\n  },\n  {\n    outputs: [{ type: \"address\" }],\n    constant: true,\n    name: \"marketingAddress\",\n    stateMutability: \"View\",\n    type: \"Function\",\n  },\n  {\n    outputs: [{ type: \"address\" }],\n    constant: true,\n    name: \"projectAddress\",\n    stateMutability: \"View\",\n    type: \"Function\",\n  },\n  {\n    inputs: [{ name: \"_addr\", type: \"address\" }],\n    name: \"removeWhitelist\",\n    stateMutability: \"Nonpayable\",\n    type: \"Function\",\n  },\n  {\n    inputs: [{ name: \"_addr\", type: \"address\" }],\n    name: \"setWhitelist\",\n    stateMutability: \"Nonpayable\",\n    type: \"Function\",\n  },\n  {\n    outputs: [{ type: \"uint256\" }],\n    constant: true,\n    name: \"totalDeposits\",\n    stateMutability: \"View\",\n    type: \"Function\",\n  },\n  {\n    outputs: [{ type: \"uint256\" }],\n    constant: true,\n    name: \"totalInvested\",\n    stateMutability: \"View\",\n    type: \"Function\",\n  },\n  {\n    outputs: [{ type: \"uint256\" }],\n    constant: true,\n    name: \"totalUsers\",\n    stateMutability: \"View\",\n    type: \"Function\",\n  },\n  {\n    outputs: [{ type: \"uint256\" }],\n    constant: true,\n    name: \"totalWithdrawn\",\n    stateMutability: \"View\",\n    type: \"Function\",\n  },\n  {\n    outputs: [{ type: \"bool\" }],\n    constant: true,\n    inputs: [{ type: \"address\" }],\n    name: \"whiteListed\",\n    stateMutability: \"View\",\n    type: \"Function\",\n  },\n  { name: \"withdraw\", stateMutability: \"Nonpayable\", type: \"Function\" },\n];\n\n// =========================\n// TronWeb hook\n// =========================\nfunction useTronWeb() {\n  const [tronWeb, setTronWeb] = useState();\n\n  useEffect(() => {\n    let interval;\n\n    if (!tronWeb) {\n      interval = setInterval(() => {\n        if (window.tronWeb && window.tronWeb.defaultAddress.base58) {\n          setTronWeb(window.tronWeb);\n        }\n      }, 3000);\n    }\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n\n  return tronWeb;\n}\n\n// ========================\n// Component\n// ========================\nfunction App() {\n  const [show, setShow] = useState(false);\n  const handleShow = () => setShow(!show);\n\n  const tronWeb = useTronWeb();\n\n  const contract = tronWeb && tronWeb.contract(abi, contractAddress)\n\n  return (\n    <>\n      <AppNavbar onToggle={handleShow} />\n      <div className=\"mx-5 px-5\">\n        <TronWebContext.Provider value={tronWeb && tronWeb}>\n          <Hero contract={contract}/>\n          <Description contract={contract}/>\n          <Guide />\n          <AppModal isOpen={show} onToggle={handleShow} />\n          <Contract />\n          <Contact />\n        </TronWebContext.Provider>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n",["52","53"],"/home/ehealth4everyone/Desktop/Web/DAPP/tronaux/src/components/Description.jsx",[],"/home/ehealth4everyone/Desktop/Web/DAPP/tronaux/src/components/Navbar.jsx",[],"/home/ehealth4everyone/Desktop/Web/DAPP/tronaux/src/components/Guide.jsx",[],"/home/ehealth4everyone/Desktop/Web/DAPP/tronaux/src/index.js",[],"/home/ehealth4everyone/Desktop/Web/DAPP/tronaux/src/components/Modal.jsx",[],"/home/ehealth4everyone/Desktop/Web/DAPP/tronaux/src/components/Contract.jsx",[],"/home/ehealth4everyone/Desktop/Web/DAPP/tronaux/src/components/Contact.jsx",[],"/home/ehealth4everyone/Desktop/Web/DAPP/tronaux/src/constants.js",["54"],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":346,"column":6,"nodeType":"61","endLine":346,"endColumn":8,"suggestions":"62"},{"ruleId":"55","replacedBy":"63"},{"ruleId":"57","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":3,"column":1,"nodeType":"67","endLine":5,"endColumn":2},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'tronWeb'. Either include it or remove the dependency array.","ArrayExpression",["70"],["68"],["69"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"71","fix":"72"},"Update the dependencies array to be: [tronWeb]",{"range":"73","text":"74"},[8230,8232],"[tronWeb]"]